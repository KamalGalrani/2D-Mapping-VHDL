
entity transmit is

end entity;

architecture main of transmit is
signal done,
signal hold, latch: 
signal step: integer;
begin
  
  --//Latch data[7:0] into the transmit hold register at posedge of wr.
  CONTROL: process (wr, clk_main)
  begin
    if (wr = '0' and done = '1') then
      latch <= data;
      txrdy <= '0';
		trigger <= '1';
    else
	   trigger <= '0';
    end if;
  end process;
  
  TRANSMIT_DATA: process (clk, reset, rising_edge(trigger))
  begin
    if (reset = '1') then
      parity <= paritymode;
      tx <= '1';
	   step <= 0;
	   done <= '1';
    elsif (rising_edge(trigger)) then
	   parity <= paritymode;
      tx <= '1';
	   step <= 0;
	   done <= '0';
	 elsif (rising_edge(clk) and done = '0')
      if (step = 0) then
        parity <= paritymode;
        tx <= '0';
		  step <= step + 1;
      else
        parity <= parity xor latch(0);
		  if (step = 10) then
          tx <= '1';
			 step <= 0;
			 done <= '1';
        elsif (step = 9) then
          tx <= parity;
			 step <= step + 1;
        else
          tx <= latch(0);
			 step <= step + 1;
        end if;
        latch <= '0'&latch(7 downto 1);
      end if;
    end if;
  end process;
end architecture;